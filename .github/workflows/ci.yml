name: CI/CD Pipeline for WebClient

# Define quando o pipeline será executado
on:
  push:
    branches:
      - main  # Pipeline executado quando há push na branch 'main'
  pull_request:
    branches:
      - main

# Define os jobs a serem executados
jobs:
  build:
    runs-on: ubuntu-latest  # O sistema operacional do runner (Ubuntu)

    steps:
    # Passo 1: Checar o código do repositório
    - name: Checkout repository
      uses: actions/checkout@v2

    # Passo 2: Configurar o JDK para rodar o projeto
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'

    # Passo 3: Executar o build do projeto com Maven
    - name: Build with Maven
      run: mvn clean install

    # Passo 4: Executar os testes
    - name: Run tests
      run: mvn test

    # Passo 5: Publicar resultados de testes (opcional)
    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: target/surefire-reports/

  deploy:
    needs: build  # O job deploy só será executado se o build passar
    runs-on: ubuntu-latest

    steps:
    # Passo 6: Checkout do código novamente para o deploy
    - name: Checkout repository
      uses: actions/checkout@v2

    # Passo 7: Deploy no Kubernetes (exemplo básico)
    - name: Deploy to Kubernetes
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}  # Armazene seu KUBECONFIG como um segredo no GitHub
      run: |
        kubectl apply -f k8s/deployment.yaml
